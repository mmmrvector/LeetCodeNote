class Solution(object):
    def isValidSerialization(self, preorder):
        """
        :type preorder: str
        :rtype: bool
        """
        # 前序遍历，每个节点如果不是空节点，必有2个子节点，不用考虑在左子树还是右子树
        preorder = preorder.split(",")
        space = 1
        for p in preorder:
            if space <= 0:
                return False
            if p == '#':
                space -= 1
            else:
                space += 1
        return space == 0
s = Solution()
print(s.isValidSerialization("9,9,9,9,9,9,9,9,#,#,#,9,9,9,9,#,#,#,9,9,#,9,#,#,9,9,9,#,#,9,#,#,9,#,#,9,#,#,9,#,9,9,9,9,#,9,#,#,9,9,9,#,9,9,#,#,#,9,#,#,9,9,#,#,9,9,#,#,#,#,9,#,#,9,#,9,9,9,9,#,#,9,#,#,9,9,#,#,9,#,9,#,#,9,9,9,9,9,#,#,9,9,#,#,#,9,9,9,#,#,9,#,#,9,9,9,#,#,#,#,9,9,9,9,#,#,9,#,#,9,9,9,#,#,9,#,9,#,#,9,#,#,9,9,9,#,#,#,9,9,9,#,#,#,9,#,#,9,#,9,#,9,#,#,9,#,9,9,9,#,#,9,9,#,#,#,9,9,#,9,#,#,9,#,9,9,#,9,9,9,#,#,9,9,#,#,#,9,#,9,#,9,#,9,9,#,#,#,9,9,#,#,9,9,9,9,9,#,#,#,9,#,#,#,#,9,9,9,9,9,#,#,#,#,9,#,9,9,9,#,9,#,#,9,#,#,#,9,9,#,9,9,9,#,#,#,9,9,9,9,9,#,#,#,9,#,9,#,#,9,#,#,#,9,9,9,9,9,#,#,#,9,9,9,#,#,#,9,9,9,#,#,9,9,#,#,9,9,9,9,9,#,9,#,#,#,9,9,9,#,9,#,9,#,#,9,9,9,9,#,#,#,#,9,#,#,9,9,#,#,#,9,9,#,9,#,#,9,#,9,#,#,#,9,9,#,9,9,#,#,#,9,9,9,#,#,9,#,9,#,#,#,9,9,9,9,9,#,#,9,#,9,9,#,#,#,9,#,#,9,9,9,#,9,#,#,9,#,#,9,#,9,#,9,9,#,#,#,9,9,9,#,#,#,9,#,9,#,#,9,9,9,9,#,9,#,#,9,9,#,9,9,9,#,#,9,#,#,#,9,9,9,#,#,9,#,9,#,#,9,9,9,#,#,9,#,#,9,#,#,9,#,#,9,9,9,#,#,9,9,#,9,#,#,#,9,9,9,#,#,9,#,9,9,#,#,#,#,9,9,#,#,9,9,#,9,#,#,9,9,9,9,#,#,#,9,#,9,#,#,#"))

